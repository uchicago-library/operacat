# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-25 20:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorOrResponsiblePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('author_name', models.CharField(max_length=255)),
                ('optional_title', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CatalogItemPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('item_catalog', wagtail.wagtailcore.fields.StreamField((('catalog', wagtail.wagtailcore.blocks.PageChooserBlock()),))),
                ('item_dealer', wagtail.wagtailcore.fields.StreamField((('dealer', wagtail.wagtailcore.blocks.PageChooserBlock()),))),
                ('item_composer', wagtail.wagtailcore.fields.StreamField((('composer', wagtail.wagtailcore.blocks.PageChooserBlock()),))),
                ('lot', models.CharField(blank=True, max_length=100, null=True)),
                ('place', wagtail.wagtailcore.fields.StreamField((('place', wagtail.wagtailcore.blocks.PageChooserBlock()),), blank=True, null=True)),
                ('piece_title', wagtail.wagtailcore.fields.StreamField((('piece_title', wagtail.wagtailcore.blocks.PageChooserBlock()),), blank=True, null=True)),
                ('item_type', wagtail.wagtailcore.fields.StreamField((('item_type', wagtail.wagtailcore.blocks.PageChooserBlock()),), blank=True, null=True)),
                ('date_information', wagtail.wagtailcore.fields.StreamField((('date_label', wagtail.wagtailcore.blocks.StructBlock((('date_label', wagtail.wagtailcore.blocks.CharBlock(max_length=100)),))), ('date', wagtail.wagtailcore.blocks.StructBlock((('month', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('day', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('year', wagtail.wagtailcore.blocks.RegexBlock(error_message='Not a valid year. It must be a four numeral digit as in 1967', regex='^\\d{4}$'))))), ('start_date', wagtail.wagtailcore.blocks.StructBlock((('month', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('day', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('year', wagtail.wagtailcore.blocks.RegexBlock(error_message='Not a valid year. It must be a four numeral digit as in 1967', regex='^\\d{4}$'))))), ('end_date', wagtail.wagtailcore.blocks.StructBlock((('month', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('day', wagtail.wagtailcore.blocks.RegexBlock(error_message="Not a valid month input. It must be two digits. If month numeral is only a single place a zero at the front of the number as in '01'", regex='^\\d{2}$')), ('year', wagtail.wagtailcore.blocks.RegexBlock(error_message='Not a valid year. It must be a four numeral digit as in 1967', regex='^\\d{4}$')))))), blank=True, null=True)),
                ('images', wagtail.wagtailcore.fields.StreamField((('images', wagtail.wagtailimages.blocks.ImageChooserBlock()),), blank=True, null=True)),
                ('item_description', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
                ('field_notes', wagtail.wagtailcore.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CatalogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('catalog_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ComposerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('dealer_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ItemTypePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('type_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PieceTitlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(max_length=1000)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PlacePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('place_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RecipientOrDedicateePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('recipient_name', models.CharField(max_length=255)),
                ('optional_title', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
